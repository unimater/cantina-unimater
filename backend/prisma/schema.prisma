generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Produto {
    id                      String    @id @default(cuid())
    descricao               String
    valor                   Decimal
    situacao                Boolean
    imagem                  String?
    quantidadeEstoque       Decimal @default(0)
    estoqueMinimo           Decimal @default(0)

    categoria   Categoria @relation(fields: [categoriaId], references: [id])  
    categoriaId String    @map("categoria_id")

    movimentacaoEstoque MovimentacaoEstoque[]
    
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime? @updatedAt @map("updated_at")
}

model Categoria {
    id        String        @id @default(cuid())
    descricao String
    tipo      TipoCategoria
    situacao  Boolean

    produtos  Produto[]

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")
}

enum TipoCategoria {
    PRODUTO
    DESPESA
}

model Despesa {
  id             String     @id @default(cuid())
  descricao      String     @unique                                                     
  data           DateTime                                    
  valor          Decimal               
  fornecedor     String?                   
  observacoes    String?       

  createdAt DateTime  @default(now()) @map("created_at")       
  updatedAt DateTime? @updatedAt      @map("updated_at")                                  
}

model User {
  id           String       @id @default(cuid())
  cpf          String       @unique @db.VarChar(20)
  name         String       @db.VarChar(200)
  username     String       @unique @db.VarChar(100) 
  password     String       @db.VarChar(200)
  email        String?      @db.VarChar(200)
  phone        String?      @db.VarChar(20)
  active       Boolean      @default(true)

  movimentacaoEstoque MovimentacaoEstoque[]

  createdAt    DateTime     @default(now())
  updatedAt    DateTime?    @updatedAt


  resetToken       String?     
  resetTokenExpiry DateTime?   
}

model formasPagamento {
  id           String       @id @default(cuid())
  name         String
  status       Boolean      @default(true)

  createdAt    DateTime     @default(now())
  updatedAt    DateTime?    @updatedAt
}

enum TipoMovimentacao {
  ENTRADA
  SAIDA
}

model MovimentacaoEstoque {
  id                String @id @default(cuid())

  produto           Produto @relation(fields: [produtoId], references: [id])
  produtoId         String @map("produtoId")

  usuario           User @relation(fields: [usuarioId], references: [id])
  usuarioId         String @map("usuarioId")

  tipo              TipoMovimentacao
  motivo            String @db.VarChar(255)
  quantidade        Decimal @db.Decimal(15, 2)
  estoqueAnterior   Decimal @db.Decimal(15, 2)
  estoqueAtual      Decimal @db.Decimal(15, 2)
  observacoes       String? @db.VarChar(255)

  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt
}
